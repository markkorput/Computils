#pragma kernel CSApplyTransformMatrix

// #pragma target 4.0

#define thread_group_size_x 4
#define thread_group_size_y 4

struct Position
{
    float3 pos;
};

RWStructuredBuffer<Position> vertBuffer;
RWStructuredBuffer<Position> targetsBuffer;

int ResolutionX;
int TargetsCount;
float4x4 transformMatrix;

[numthreads (thread_group_size_x, thread_group_size_y, 1)]
void CSApplyTransformMatrix(uint3 id : SV_DispatchThreadID)
{
    const uint vertidx = id.x + id.y * ResolutionX;

    float3 originalPos = vertBuffer[vertidx].pos;
    float4 pos = float4(originalPos, 1);
    pos = mul(transformMatrix, pos);
    targetsBuffer[vertidx].pos = pos;
}