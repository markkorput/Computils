#pragma kernel CSEaseTo

// #pragma target 4.0

#define thread_group_size_x 4
#define thread_group_size_y 4

struct Position
{
    float3 pos;
};

RWStructuredBuffer<Position> vertBuffer;
RWStructuredBuffer<Position> targetsBuffer;

int ResolutionX;
int TargetsCount;
float EaseFactor;
bool AnimateAll;

[numthreads (thread_group_size_x, thread_group_size_y, 1)]
void CSEaseTo(uint3 id : SV_DispatchThreadID)
{
    const uint vertidx = id.x + id.y * ResolutionX;
    uint targetidx = vertidx;

    if (vertidx >= (uint)TargetsCount) {
        if (!AnimateAll) return;
        targetidx = targetidx % (uint)TargetsCount;
    }

    float3 target = targetsBuffer[targetidx].pos;
    float3 vert = vertBuffer[vertidx].pos;
    vertBuffer[vertidx].pos = vert + (target-vert) * EaseFactor;
}